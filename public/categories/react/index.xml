<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>React on Amodh's Blog</title><link>https://example.org/categories/react/</link><description>Recent content in React on Amodh's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 29 Jan 2024 15:25:55 +0530</lastBuildDate><atom:link href="https://example.org/categories/react/index.xml" rel="self" type="application/rss+xml"/><item><title>React Grid Light</title><link>https://example.org/grid-light/</link><pubDate>Mon, 29 Jan 2024 15:25:55 +0530</pubDate><guid>https://example.org/grid-light/</guid><description>Grid Lights In this blog lets understand how to implement Grid Lights using React fundamentals
Concepts that are used in this are :
useState setInterval Lets understand the use of these hooks &amp;ndash;&amp;gt;
useState : Generally useState is mainly used to display the change in UI or store some data whenever an event is triggered by the user. In the case of Grid Lights useState is used track the order the we have clicked on the div and to check whether the div is deactivating or not ie whether the div light is on not const [order, setOrder] = useState([]); const [isDeactivating, setIsDeactivating] = useState(false); setInterval:Generally it is used to perform some asynchronous function like counter display or something In this case it is used to change the color after every 300ms .</description></item><item><title>React Like Button</title><link>https://example.org/like-button/</link><pubDate>Mon, 29 Jan 2024 14:35:55 +0530</pubDate><guid>https://example.org/like-button/</guid><description>Like Button In this blog lets understand how to implement Like Button using React fundamentals
Concepts that are used in this are :
useState async await try/catch block Lets understand the use of these hooks &amp;ndash;&amp;gt;
useState : Generally useState is mainly used to display the change in UI or store some data whenever an event is triggered by the user. In the case of Like button we need three useState cause one for checking whether we have liked or not Second to whether we have fetched the icons from the API or not Third one is to send the error message if the icons failed to load when called.</description></item><item><title>React Progress Bar</title><link>https://example.org/progress-bar/</link><pubDate>Mon, 29 Jan 2024 14:02:55 +0530</pubDate><guid>https://example.org/progress-bar/</guid><description>Progress Bar In this blog lets understand how to implement Progress Bar using React fundamentals
Concepts that are used in this are :
useState useEffect setInterval Lets understand the use of these hooks &amp;ndash;&amp;gt;
useState : Generally useState is mainly used to display the change in UI or store some data whenever an event is triggered by the user. In the case of Progress Bar it is mainly used to change the bar value and its percentage with respect the value your gonna understand better with the code const [value, setValue] = useState(0); const [percent, setPercent] = useState(value); useEffect : Generally useEffect is used to perform some side-effects in our website like displaying the fetched API data as soon as the website loads or do some changes in UI when certain part of UI changes .</description></item><item><title>React Pagination</title><link>https://example.org/pagination/</link><pubDate>Mon, 22 Jan 2024 11:36:55 +0530</pubDate><guid>https://example.org/pagination/</guid><description>Pagination Using React In this blog lets understand how to implement pagination using React fundamentals
Concepts that are used in this are :
useState useEffect async await Lets understand the use of these hooks &amp;ndash;&amp;gt;
useState : Generally useState is mainly used to display the change in UI or store some data whenever an event is triggered by the user. In the case of pagination this hook is mainly used to handle the products part as well as change of pages cause whenever the user clicks on page-2 button different products needs to displayed so it completely makes sense to use useState hook to the pages button similarly as soon as you reach to some new page new products needs to be displayed so adding a state to products list also makes sense const [products, setProducts] = useState([]); const [pages, setPages] = useState(1); Use of async/await : As we are using a third party API to fetch the data of the products so it will take time to return the response so dont wanna stop the execution of the remaining code so we make this task asynchronous by using async/await .</description></item></channel></rss>